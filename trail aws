provider "aws" {
  region = var.region
}

data "aws_caller_identity" "current" {}

variable "region" {
  description = "The AWS region to deploy resources in"
  type        = string
  default     = "us-west-2" # Change to your preferred region
}

# Create an S3 bucket for data storage
resource "aws_s3_bucket" "cloudtrail_bucket" {
  bucket = "rxgenomixcloudtrails30092025" # Name of the S3 bucket
  acl    = "private"                      # Bucket access control list

  versioning {
    enabled = true # Enable versioning for the bucket
  }
}

# Create an SNS topic for notifications
resource "aws_sns_topic" "cloudtrail_sns" {
  name = "rxgenomixcloudtrailsns"
}

# Create SNS topic policy
resource "aws_sns_topic_policy" "cloudtrail_sns_policy" {
  arn = aws_sns_topic.cloudtrail_sns.arn

  policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Effect = "Allow",
        Principal = {
          Service = "cloudtrail.amazonaws.com"
        },
        Action   = "sns:Publish",
        Resource = aws_sns_topic.cloudtrail_sns.arn,
        Condition = {
          StringEquals = {
            "aws:SourceArn" = "arn:aws:cloudtrail:${var.region}:${data.aws_caller_identity.current.account_id}:trail/rxgenomixcloudtrail"
          }
        }
      }
    ]
  })
}

# Create CloudWatch log group
resource "aws_cloudwatch_log_group" "cloudtrail_log_group" {
  name = "rxgenomixcloudwatchforcloustrail"
}

# Create IAM role for CloudWatch logging
resource "aws_iam_role" "cloudtrail_iam_role" {
  name = "rxgenomixiamforcloudwatchincloustrail"

  assume_role_policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Action = "sts:AssumeRole",
        Principal = {
          Service = "cloudtrail.amazonaws.com"
        },
        Effect = "Allow",
        Sid    = ""
      },
    ]
  })
}

# Attach policy to allow CloudTrail to write to CloudWatch logs
resource "aws_iam_role_policy_attachment" "cloudtrail_logging_policy" {
  role       = aws_iam_role.cloudtrail_iam_role.name
  policy_arn = "arn:aws:iam::aws:policy/AWSCloudTrail_FullAccess"
}

# Create IAM role policy for S3 and KMS access
resource "aws_kms_key" "cloudtrail_kms_key" {
  description = "KMS key for CloudTrail"
  policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Sid: "Allow administration of the key",
        Effect: "Allow",
        Principal = {
          AWS = "arn:aws:iam::${data.aws_caller_identity.current.account_id}:role/${aws_iam_role.cloudtrail_iam_role.name}"
        },
        Action = [
          "kms:Create*",
          "kms:Describe*",
          "kms:Enable*",
          "kms:List*",
          "kms:Put*",
          "kms:Update*",
          "kms:Revoke*",
          "kms:Disable*",
          "kms:Get*",
          "kms:Delete*",
          "kms:ScheduleKeyDeletion",
          "kms:CancelKeyDeletion"
        ],
        Resource = "*"
      },
      {
        Sid: "Allow use of the key",
        Effect: "Allow",
        Principal = {
          AWS = "arn:aws:iam::${data.aws_caller_identity.current.account_id}:role/${aws_iam_role.cloudtrail_iam_role.name}"
        },
        Action = [
          "kms:Encrypt",
          "kms:Decrypt",
          "kms:ReEncrypt*",
          "kms:GenerateDataKey*",
          "kms:DescribeKey"
        ],
        Resource = "*"
      }
    ]
  })
}



# Create the CloudTrail trail
resource "aws_cloudtrail" "cloudtrail" {
  name                          = "rxgenomixcloudtrail"
  s3_bucket_name                = aws_s3_bucket.cloudtrail_bucket.bucket
  is_multi_region_trail         = true
  enable_log_file_validation    = true
  kms_key_id                    = aws_kms_key.cloudtrail_kms_key.arn
  sns_topic_name                = aws_sns_topic.cloudtrail_sns.name
  cloud_watch_logs_group_arn    = "${aws_cloudwatch_log_group.cloudtrail_log_group.arn}:*"
  cloud_watch_logs_role_arn     = aws_iam_role.cloudtrail_iam_role.arn
  include_global_service_events = true
  depends_on                    = [aws_sns_topic.cloudtrail_sns]
}

# S3 bucket policy for CloudTrail
resource "aws_s3_bucket_policy" "cloudtrail_bucket_policy" {
  bucket = aws_s3_bucket.cloudtrail_bucket.id

  policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Sid = "AWSCloudTrailAclCheck20150319",
        Effect = "Allow",
        Principal = {
          Service = "cloudtrail.amazonaws.com"
        },
        Action = "s3:GetBucketAcl",
        Resource = "arn:aws:s3:::${aws_s3_bucket.cloudtrail_bucket.id}",
        Condition = {
          StringEquals = {
            "aws:SourceArn" = "arn:aws:cloudtrail:${var.region}:${data.aws_caller_identity.current.account_id}:trail/rxgenomixcloudtrail"
          }
        }
      },
      {
        Sid = "AWSCloudTrailWrite20150319",
        Effect = "Allow",
        Principal = {
          Service = "cloudtrail.amazonaws.com"
        },
        Action = "s3:PutObject",
        Resource = "arn:aws:s3:::${aws_s3_bucket.cloudtrail_bucket.id}/AWSLogs/${data.aws_caller_identity.current.account_id}/*",
        Condition = {
          StringEquals = {
            "s3:x-amz-acl" = "bucket-owner-full-control",
            "aws:SourceArn" = "arn:aws:cloudtrail:${var.region}:${data.aws_caller_identity.current.account_id}:trail/rxgenomixcloudtrail"
          }
        }
      }
    ]
  })
}


resource "aws_iam_role_policy" "cloudtrail_iam_policy" {
  name = "cloudtrail_iam_policy"
  role = aws_iam_role.cloudtrail_iam_role.id

  policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Effect = "Allow",
        Action = [
          "s3:GetBucketAcl",
          "s3:PutObject"
        ],
        Resource = [
          "arn:aws:s3:::${aws_s3_bucket.cloudtrail_bucket.id}",
          "arn:aws:s3:::${aws_s3_bucket.cloudtrail_bucket.id}/AWSLogs/${data.aws_caller_identity.current.account_id}/*"
        ]
      },
      {
        Effect = "Allow",
        Action = [
          "kms:Encrypt",
          "kms:Decrypt",
          "kms:ReEncrypt*",
          "kms:GenerateDataKey*",
          "kms:DescribeKey"
        ],
        Resource = aws_kms_key.cloudtrail_kms_key.arn
      },
      {
        Effect = "Allow",
        Action = [
          "logs:CreateLogStream",
          "logs:PutLogEvents"
        ],
        Resource = "${aws_cloudwatch_log_group.cloudtrail_log_group.arn}:*"
      }
    ]
  })
}


output "s3_bucket_name" {
  value = aws_s3_bucket.cloudtrail_bucket.id
}

output "kms_key_id" {
  value = aws_kms_key.cloudtrail_kms_key.key_id
}

output "sns_topic_arn" {
  value = aws_sns_topic.cloudtrail_sns.arn
}

output "cloudwatch_log_group_name" {
  value = aws_cloudwatch_log_group.cloudtrail_log_group.name
}

output "iam_role_name" {
  value = aws_iam_role.cloudtrail_iam_role.name
}
